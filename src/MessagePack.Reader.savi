:class MessagePack.Reader
  :let _bytes Bytes
  :var _offset USize

  :new (@_bytes)
    @_offset = 0

  :fun box is_eos: @_bytes.size >= @_offset

  :fun box peek_type!
    first_byte = @_bytes.byte_at!(@_offset)
    case (
    | first_byte == 0b11000000 | MessagePack.Type.Nil
    |                            error!
    )

  :fun ref read_nil! None
    case @peek_type! == (
    | MessagePack.Type.Nil |
      @_advance
      None
    |
      error!
    )

  :fun ref read_bool! Bool
    error!

  :fun ref read_uint! U64
    error!

  :fun ref read_int! I64
    error!

  :fun ref read_f64! F64
    error!

  :fun ref read_string! String
    error!

  :fun ref read_binary! Bytes
    error!

  :fun ref read_array_head! USize
    error!

  :fun ref read_map_head! USize
    error!

  :fun ref read_timestamp! Pair(U64)
    error!

  :fun ref read_ext! Pair(I8, Bytes)
    error!

  :fun ref _advance(n USize = 1)
    @_offset = @_offset + n

